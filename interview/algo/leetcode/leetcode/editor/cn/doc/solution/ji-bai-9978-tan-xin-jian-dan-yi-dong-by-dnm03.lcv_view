> Problem: [455. 分发饼干](https://leetcode.cn/problems/assign-cookies/description/)

[TOC]

# 解题方法

> 先对两个数组排序，再用一次循环遍历数组，循环终止条件是孩子都喂饱了或者饼干用完了
> 循环中的逻辑:
> 如果这块饼干满足孩子，移动饼干和孩子
> 不满足，移动饼干，去找下一个满足的饼干
> 为什么可以用贪心？如果当前的饼干满足不了这个孩子，当然也满足不了比这个孩子胃口更大的孩子（因为我们已经对两个数组排好序了）
> 所以这块饼干可以跳过了

# 复杂度

时间复杂度:

> O(mlogm+nlogn)

# Code

* []

```Java
class Solution {
    public int findContentChildren(int[] g, int[] s) {
        int res = 0;
        Arrays.sort(s);
        Arrays.sort(g);
        // 循环结束条件：孩子都喂饱了或者饼干用完了
        for(int cookie=0,child=0;child<g.length && cookie<s.length;cookie++) {
            // 如果这块饼干满足孩子，移动饼干和孩子
            // 不满足，移动饼干，去找下一个满足的饼干
            // 为什么可以用贪心？如果当前的饼干满足不了这个孩子，当然也满足不了比这个孩子胃口更大的孩子（因为我们已经对两个数组排好序了）
            // 所以这块饼干可以跳过了
            if(g[child]<=s[cookie]) {
                res++;
                child++;
            }
        }
        return res;
    }
}
```

